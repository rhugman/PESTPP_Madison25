name: Deploy Quarto Site
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up mamba environment
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: environment.yml
          cache-downloads: true
          init-shell: bash

      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2

      - name: Make executables accessible and setup environment
        run: |
          chmod +x bin/linux/*
          echo "PATH=$PWD/bin/linux:$PATH" >> $GITHUB_ENV

      - name: Setup Python kernel with environment variables
        run: |
          export PATH="$PWD/bin/linux:$PATH"
          # Install kernel for user (this worked in the previous attempt)
          micromamba run -n madison python -m ipykernel install --user --name python3 --display-name "Python 3"
          # Verify kernel installation
          micromamba run -n madison jupyter kernelspec list
          echo "Jupyter data dir:"
          micromamba run -n madison python -c "import jupyter_core; print(jupyter_core.paths.jupyter_data_dir())"
          echo "Available kernels in user directory:"
          ls -la $HOME/.local/share/jupyter/kernels/ || echo "No user kernels directory"

      - name: Render site with environment
        run: |
          export PATH="$PWD/bin/linux:$PATH"
          # Set Jupyter paths to find the user-installed kernel
          export JUPYTER_PATH="$HOME/.local/share/jupyter"
          export JUPYTER_CONFIG_PATH="$HOME/.local/share/jupyter"
          # Verify Quarto can see the kernel
          echo "Quarto kernel check:"
          micromamba run -n madison quarto check jupyter
          # Render with debug
          micromamba run -n madison quarto render --execute-debug
        env:
          PATH: ${{ env.PATH }}

      - name: Add .nojekyll
        run: |
          touch _site/.nojekyll

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: _site
          publish_branch: gh-pages
